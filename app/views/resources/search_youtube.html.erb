

<script>
	function showClip(elem){
		stopShow();
		var form = $(elem).parents('form')
		var youtube_id = youtubeIdFromElem(elem)
		
		$('#showBox')
			.find('[name=embedBox]').html('<iframe width="560" height="315" src="http://www.youtube.com/embed/'+
				youtube_id+'" frameborder="0" allowfullscreen></iframe>')
				
		form.find('[name=showBoxContainer]').append($('#showBox').show())
		form.find('[name=thumbnail]').hide()
	}
	
	function stopShow(){ // stop running clip and restore thumbnail 
		$("#showBox")
			.find("[name=embedBox]").first().html("")
			.end().end()
			.hide()
			.parents('form').find('[name=thumbnail]').show();
	}
	
	function saveResource(elem){
		var youtube_id = youtubeIdFromElem(elem)
		var ser_form = $(elem).parents('form').serialize();
		$.post('/resources', ser_form, function(resp){
			alert( (!isNaN(resp.id)) ? 'resource saved' : 'save failed');
		})
	}
	
	function youtubeIdFromElem(elem){
		var youtube_id = $(elem).parents('form').find('[name=youtube_id]').val().split(":")
		return youtube_id[youtube_id.length - 1];
	}
	

</script>

<div id=showBox style='display:none;'>
	<div name=embedBox></div>
	<span class='info pointer' onclick='stopShow(this);'>close</span> | 
	<span class='info pointer' onclick='saveResource(this);'>save this video link as resource</span>
	
</div>

<%
tune_title = params[:tune_title]
keywords = "irish+music+" + (tune_title.nil? ? "" : tune_title .gsub(" ", "+"))

%>


<!--
<input type=text id=youtubeSearchVals value="<%= keywords %>" > <button onclick='redo();'>redo search</button>
-->
<div class='info copper' style='background:lightgray;padding:5px;'><span class='black'>Results for search: </span><%= keywords.gsub("\"", "&quot;").gsub("+", " ") %></div>


<%
require "rexml/document"
require 'rexml/xpath'

# get youtube videos xml
youtube_url = "http://gdata.youtube.com/feeds/api/videos?orderby=published&start-index=1&max-results=30&v=2&q="
youtube_url += keywords
youtube_response = HTTParty.get(youtube_url)


# parse the xml and list video thumbnails etc
begin
	
	
	
	concat tag 'br'

	parser = REXML::Document.new youtube_response

	REXML::XPath.each( parser.root, '//entry') do |entry|
		
		form = form_for @resource do |f|
			
			youtube_id = entry.elements['id'].text.split(':').last
			
			concat f.hidden_field :youtube_id, {:name=>'youtube_id', :value=>youtube_id}
			
			concat f.hidden_field :tune_id, {:name=>'tune_id', :value=>params[:tune_id]} if params.has_key?('tune_id') 
			
			concat f.hidden_field :title, {:value=>entry.elements['title'].text}
			concat f.hidden_field :url, {:value=>'http://www.youtube.com/embed/' + youtube_id}
			concat f.hidden_field :resource_type, {:value=>11} # todo get this value into config as RESOURCE_TYPE_YOUTUBE
			
		
			concat tag('div', :name=>'showBoxContainer')
			REXML::XPath.each(entry, 'media:group/media:thumbnail') do |tn| 
				if(tn.attributes['yt:name'] == 'default')
					concat image_tag tn.attributes['url'], 
						{:onclick=>'showClip(this)', :name=>'thumbnail', :class=>'pointer'}
				end
			end
		
			concat simple_format(entry.elements['title'].text, {:class=>'info black', :name=>'title'})
	
	
			REXML::XPath.each(entry, 'media:group/media:description') do |desc| 
				concat simple_format(desc.text, :class=>'info normal')
			end

		end
		concat '<br>'.html_safe
		concat form

	end

	#{results:[{title, description, date, thumbnail, categories:[]},{},{}]}


rescue Exception => e
	concat "ERROR: " + e.message

end
%>






























































